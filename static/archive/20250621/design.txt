### **Portfolio Design: "The KIPPER.GEVA.DEV Terminal"**

#### **Overall Concept & User Experience**

The website loads to a stark, full-screen, simulated terminal interface. The experience is not passive; the user initiates a "hack" to access the portfolio content. The aesthetic is clean and modern-minimalist, using a dark theme with a single, vibrant accent color. All animations are crisp, fast, and reinforce the theme of accessing a secure system.

---

#### **Phase 1: Initial Connection**

Upon visiting the site, the user sees a nearly black screen. The only element is a single, blinking cursor, styled like a classic terminal block. Below it is a single line of text with a prompt:

`> INITIATE SESSION [PRESS ENTER]`

The user must press the "Enter" key to begin. No mouse interaction is possible at this stage.

---

#### **Phase 2: The "Hacking" Sequence**

Once "Enter" is pressed, the screen comes alive with a rapid, automated sequence of text commands that type themselves out and scroll up the screen. The text is a clean, monospaced font in a vibrant electric blue.

```
> CONNECTING TO NODE: KIPPER.GEVA.DEV ... [OK]
> AUTHENTICATING ... [ACCESS GRANTED]
> BYPASSING FIREWALL V3.14 ... [COMPLETE]
> QUERYING AI CORE FOR DAILY UI SCHEMA ... [GENERATING]
> DECRYPTING PRIMARY DATASTREAM ...
> RENDERING INTERFACE ...
```

This sequence takes about 2-3 seconds. As the final line types out, the screen flickers with a subtle digital glitch effect, and the main content fades into view.

---

#### **Phase 3: The Main Interface & Content**

The "terminal" text scrolls up and out of view, replaced by the main portfolio content. The background remains dark, but now features a very faint, slow-moving grid or scanline overlay to give the impression of a high-tech monitor.

**Header Section:**
At the top of the page, the user's name and title appear, styled in a clean, sans-serif font. The glitch effect from the loading sequence resolves on this text.

**Geva Kipper**
`> Currently building the future of search at Google.`

Directly beneath, a smaller subtitle animates in, reinforcing the site's unique premise:

`This interface is procedurally regenerated by a private AI model every 24 hours. Visuals are ephemeral.`

**Content Modules (The Five Boxes):**
The five sections are presented as distinct "Data Modules." They are laid out vertically in a single column. Each module is a clean, dark grey rectangle with a sharp, 1px electric blue border. Initially, each module's title is displayed in the monospaced "terminal" font, prefixed with a folder icon and a `.dat` extension, as if they are encrypted files.

*   `[FOLDER] GlglStats.dat`
*   `[FOLDER] AhuzatDibuk.dat`
*   `[FOLDER] 2DPartOrienting.dat`
*   `[FOLDER] Meta_Portfolio.dat`
*   `[FOLDER] Access_Protocols.dat`

Clicking on a module title initiates a "decryption." The title text flickers, the module smoothly expands downwards, and the detailed content within fades in. The content inside uses the clean, readable sans-serif font.

---

#### **Module Content Details**

**1. GlglStats.dat (Decrypted):**
*   **Project:** GlglStats
*   **Description:** A Python project measuring the repetitiveness of Israeli pop-chart songs using LZ77 compression, featuring visualizations of repetition patterns in famous songs.
*   **Links (styled as executable commands):**
    *   `[LAUNCH SITE] https://glglstats.onrender.com/`
    *   `[VIEW PRESENTATION] PyData TLV Conference`

**2. AhuzatDibuk.dat (Decrypted):**
*   **Project:** Ahuzat Dibuk
*   **Description:** A Python scraping project that collects and visualizes occupancy statistics for Tel-Aviv parking lots, generating heat-maps for resident use.
*   **Links (styled as intelligence reports):**
    *   `[VIEW REPORT] Channel 13 News`
    *   `[VIEW REPORT] MAKO News`
    *   `[VIEW SOURCE] Original Facebook Publication`

**3. 2DPartOrienting.dat (Decrypted):**
*   **Project:** 2D Part Orienting
*   **Description:** A C++ implementation of an efficient algorithm to construct a 'push plan' for orienting any given polygon, contributed to an open-source computational geometry library.
*   **Links (styled as code repository access):**
    *   `[ACCESS PROJECT & CODE]`

**4. Meta_Portfolio.dat (Decrypted):**
*   **Project:** Project Chimera (This Portfolio)
*   **Description:** A self-referential, single-page portfolio designed to simulate a terminal hacking sequence. The front-end is procedurally generated daily by an AI assistant.
*   **Links (styled as a system recursive loop):**
    *   `[RE-INITIALIZE INTERFACE]`

**5. Access_Protocols.dat (Decrypted):**
*   **Project:** External Network Links
*   **Description:** Direct access protocols to professional and social network profiles.
*   **Links (styled as direct connection commands):**
    *   `[CONNECT] GitHub`
    *   `[CONNECT] LinkedIn`
    *   `[CONNECT] Facebook`

---

#### **Footer**

At the very bottom of the page, centered and in a smaller, dimmer version of the monospaced font:

`UI Schema Generated by: OpenAI GPT-4`
`System Uptime: [A live-updating stopwatch showing hours:minutes:seconds passed since 2025-06-21 01:07:40]`

The stopwatch continuously ticks, adding to the illusion of a live, persistent system.