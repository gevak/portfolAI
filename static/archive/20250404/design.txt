# Design Concept: Algorithmic Art Generator Portfolio

## Overall Theme
An interactive single-page portfolio that generates unique algorithmic art based on the visitor's interactions with the page. The art evolves and morphs as users navigate through the content, essentially creating a visual representation of code execution.

## Color Scheme & Typography
- Primary palette: Deep navy blue background transitioning to black, with vibrant neon accents (cyan, magenta, electric blue) that appear to "execute" across the screen
- Typography: Monospace font for code elements, paired with a clean sans-serif for readability
- Text colors alternate between stark white and the vibrant accent colors

## Header Section
- Developer name "Geva Kipper" appears to be "typed" onto the screen with a terminal-like animation
- Below the name, a single line about current work at Google appears with a subtle glow effect
- A subtitle explains the daily AI redesign with a timestamp indicator
- A semi-transparent visualization of code execution flows across the background, generating abstract patterns that respond to cursor movement

## Navigation
- Instead of traditional navigation, interactive code-like commands appear when hovering near the top of the screen
- Clicking these "commands" triggers animations that transform the visualization and navigate to different project sections

## Project Sections
Each project box appears as a terminal window with:
- Project title that animates like a command being entered
- Description text that "outputs" after the command
- Interactive visualization element unique to each project:

1. **GlglStats**: Visualization showing waveforms that compress/expand based on LZ77 algorithm, with embedded links to the site and PyData presentation
   
2. **Ahuzat Dibuk**: Mini heat-map visualization that responds to mouse movement, showing parking density patterns, with news story links appearing as "output" from commands

3. **2D Part Orienting**: Interactive polygon that reorients itself when clicked, demonstrating the algorithm's function, with link to the computational geometry library

4. **Portfolio Website**: Self-referential section that shows simplified code of the current page with highlighted portions that generate the current visualization

5. **Contact/Social**: Terminal window where social links appear as command suggestions with custom icons that integrate into the algorithmic visualization

## Interactive Art Generator
- Throughout the page, user interactions (mouse movements, clicks, scrolling) influence the algorithmic art being generated
- Each project section introduces a different visual algorithm component
- As users explore the page, these components combine to create a unique visual "signature" that represents their journey through the portfolio
- Code snippets appear briefly when new visual elements are introduced

## Footer
- Credit line to the AI creator appears as a terminal signature
- Stopwatch counting time since 2025-04-04 01:02:04 displayed as an executing function
- Option for users to "export" their unique generated art pattern as a PNG memento of their visit

## Responsive Design
- On mobile, the visualization simplifies but remains interactive
- Project sections stack vertically with swipe gestures triggering transitions
- Touch interactions still influence the algorithmic art generation