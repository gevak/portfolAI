# Code Editor Portfolio Design Concept

A full-screen code editor interface where the visitor arrives to see a blinking cursor in a dark-themed IDE. The background features subtle matrix-like code animations that are barely visible.

## Main Interface
- Dark code editor theme with syntax highlighting (VSCode-inspired)
- Line numbers along the left side
- A blinking cursor that automatically begins "typing" code when the page loads
- As code is "typed", it actually builds and reveals the portfolio content

## Header Animation
The first typing sequence reveals:
```
const developer = {
  name: "Geva Kipper",
  currentRole: "Engineering at Google, building the future one line at a time."
};
```

Below this, a commented section appears:
```
// This website regenerates daily via AI - what you see today will be different tomorrow
```

## Portfolio Sections
As the visitor scrolls or waits, the typing continues, "coding" each project into existence:

### Project 1 Animation
```
function createProject(name, description) {
  return { name, description, links: [] };
}

const glglStats = createProject(
  "GlglStats",
  "Measuring repetitiveness in Israeli pop music using LZ77 compression algorithms and visualizing repetition patterns in famous songs."
);
glglStats.links.push("https://glglstats.onrender.com/");
glglStats.links.push("https://www.youtube.com/watch?v=jrKAtOsj1Lo"); // PyData TLV presentation
```
When this code "executes," a terminal window appears showing the project details and a visual preview.

### Project 2 Animation
Similar typing animation for Ahuzat Dibuk project with realistic code that, when "executed," displays a panel with heat maps and news coverage links.

### Project 3 Animation
Meta reference to the portfolio site itself, with cheeky comments in the code about recursion and self-reference.

### Project 4 Animation
Social links appear as an array that is being populated, then a function call renders them as clickable icons with hover effects.

## Interactive Elements
- Visitors can interrupt the typing and type their own code
- Easter eggs hidden in "commented" sections
- When hovering over projects, the code expands to show more details
- Syntax highlighting changes subtly as you move through the page

## Bottom Bar
- A status bar showing memory usage, git branch, and other IDE elements
- An accurate stopwatch counting time since April 1, 2025, 01:09:18
- Attribution: "Site generated by [AI model name]" in the format of an import statement

## Responsive Design
On mobile, the interface adapts to look like a mobile code editor with swipe gestures revealing different code sections.