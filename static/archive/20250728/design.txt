### **Portfolio Design: The "AI-Generated IDE"**

**Overall Concept & Aesthetic:**
The website presents itself as a fully functional, minimalist Integrated Development Environment (IDE) in a dark theme. The entire screen is the IDE interface, with no traditional browser chrome or scrollbars visible. The color palette is a sophisticated dark charcoal for the background, with syntax highlighting in electric blue, mint green, warm yellow, and soft magenta, reminiscent of a modern code editor theme like "Dracula" or "Nord". The primary font is a clean, monospaced font with coding ligatures, such as JetBrains Mono or Fira Code. All interactions feel responsive and precise, with subtle, non-intrusive animations.

**Layout & Main Components:**
The screen is divided into three main, resizable panes, typical of an IDE:

1.  **File Explorer (Left Pane):** A vertical panel on the left lists the 'files' of the portfolio 'project'.
2.  **Code Editor (Center Pane):** The largest area, where the content of the selected 'file' is displayed as code.
3.  **Terminal (Bottom Pane):** A console at the bottom of the page that displays script-like output and interactive messages.

**Header & Title Section:**
At the very top of the Code Editor pane, a file tab is permanently open, reading `about_me.js`. The content of this file serves as the main header:

```javascript
// Geva Kipper: Software Engineer @ Google
// Crafting large-scale machine learning systems to organize the world's information.

/*
 * NOTE: This portfolio's theme is procedurally re-generated daily by an AI.
 * Visuals, colors, and animations may differ on your next visit.
 */
```

The Geva Kipper line has a subtle, slow "typing" animation on first load, ending with a blinking cursor that fades out after a few seconds. The subtitle is styled as a block comment and has a slight glow effect on hover.

**File Explorer & Navigation (Left Pane):**
The left pane is a clean list of files under the project root folder `// GEVA_KIPPER_PORTFOLIO`. Each file corresponds to a project or section. Each filename has a language-appropriate icon next to it (e.g., Python, C++, JS).

*   `â–¶ projects/` (This is a collapsible folder)
    *   `glglstats.py`
    *   `ahuzat_dibuk.py`
    *   `part_orienting.cpp`
    *   `the_turing_jest.js`
    *   `rhymes_of_israel.jsx`
    *   `portfolio_website.meta`
*   `contact.json`

Clicking a filename in the explorer updates the Code Editor pane to show its content. The currently active file is highlighted.

**Code Editor Content (Center Pane):**
When a project file (e.g., `glglstats.py`) is selected, the editor pane fills with syntactically highlighted pseudo-code describing the project. Links are styled as imported modules or function calls.

**Example for `glglstats.py`:**
```python
# project_name: "GlglStats"
# description: "Measures the lyrical repetitiveness of Israeli pop-chart songs
#               using LZ77 compression and visualizes patterns in song structure."

class GlglStats:
    def __init__(self):
        self.language = "Python"
        self.technologies = ["LZ77", "Data Visualization", "Web Scraping"]

    def run_project():
        # Open live project site
        open_link("https://glglstats.geekip.dev")

    def watch_presentation():
        # View my PyData TLV conference talk
        open_video("https://www.youtube.com/watch?v=jrKAtOsj1Lo")
```

The `open_link()` and `open_video()` functions are visually distinct (e.g., bright yellow) and are clickable, opening the URLs in a new tab. When a user clicks a link, a command appears in the Terminal below.

**Example for `contact.json`:**
```json
{
  "social_profiles": [
    {
      "platform": "GitHub",
      "url": "https://github.com/gevak"
    },
    {
      "platform": "LinkedIn",
      "url": "https://linkedin.com/in/gevakip"
    },
    {
      "platform": "Facebook",
      "url": "https://facebook.com/geva.kipper"
    }
  ]
}
```
Each URL within the JSON is a live, clickable link.

**The Terminal & Footer (Bottom Pane):**
The terminal pane is interactive. On page load, it displays a startup sequence:

`[INITIALIZING]...`
`[COMPILING] Geva_Kipper_Portfolio.js...`
`[SUCCESS] Welcome, visitor. Select a file to begin.`
`> _`

When a project link is clicked in the editor, the terminal responds before the new tab opens:
`> Executing open_link('https://glglstats.geekip.dev')...`

The terminal's bottom border acts as the IDE's status bar. On the far left, it displays the AI credit: **`Design by: [AI Model Name]`**. On the far right, it contains the live stopwatch: **`Time since last AI-rebuild: [HH:MM:SS]`**, actively counting up from `2025-07-28 01:18:42`. This timer constantly ticks, adding a dynamic, "live" feel to the page.