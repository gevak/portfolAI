**Website Title:** Geva Kipper - `git log --graph`

**Overall Concept:** The entire single-page website is a visual, interactive representation of a Git repository graph. The central "main" branch represents Geva's core career timeline, while project branches diverge to showcase individual works. The visual style is a clean, modern "dark mode" aesthetic, reminiscent of a code editor like VS Code, using a monospaced font (like Fira Code or JetBrains Mono) throughout for a consistent, developer-focused feel.

**Initial View (Above the Fold):**

The page loads to a dark, subtly textured background, like a premium dark-themed application. In the center, the main elements appear with a slight fade-in animation.

At the very top, the name is presented like a repository title: `Geva Kipper`.
Beneath it, a sentence is styled like a code comment: `// Currently committing features to Google's core infrastructure.`

Directly below, a subtitle appears as if it's a system log message, with a distinct color (e.g., cyan or yellow) and a blinking cursor at the end:
`[ai-cron-job v2.7.1]: This site's layout and color scheme are auto-generated daily. Last updated: [Today's Date].`

From the center of this header, a single, thick, glowing vertical line begins—this is the `main` branch of the Git graph. It has a single "commit" node (a glowing circle) at its start, marked `HEAD`. An instruction to "scroll down to view history" fades in and out gently.

**Scrolling Interaction & Layout:**

As the user scrolls down, the `main` branch line extends vertically down the center of the screen. The magic happens as project branches—thinner lines in unique, vibrant colors (e.g., magenta, green, orange)—smoothly curve outwards from "commit" nodes on the `main` branch. The layout alternates, with project boxes appearing on the left and right sides of the central `main` line, creating a balanced, aesthetically pleasing graph. The lines connecting the boxes to the main branch should animate as if being drawn in real-time as the user scrolls into view.

**Project Boxes (The "Commits"):**

Each of the six project sections is a rectangular card with rounded corners and a semi-transparent background. The card's border glows with the same color as its corresponding branch line. Hovering over a card makes its border and connecting branch line glow brighter.

The structure inside each card is styled like a commit message and file diff:

*   **Header:** A fake commit hash (e.g., `#a84efd`) followed by the project title, e.g., `GlglStats`.
*   **Description:** The project description text appears below the header.
*   **File Changes (Links):** Below the description, a list of links is styled to look like a `git status` or `diff` output. Each link has an appropriate icon.
    *   For **GlglStats**:
        *   `+ View Deployment`: https://glglstats.geekip.dev
        *   `+ Watch Presentation [PyData TLV]`: https://www.youtube.com/watch?v=jrKAtOsj1Lo
    *   For **Ahuzat Dibuk**:
        *   `+ Read Media Coverage [Channel 13]`: [link]
        *   `+ Read Media Coverage [Mako]`: [link]
        *   `+ View Original Publication`: [Facebook link]
    *   For **2D Part Orienting**:
        *   `+ Browse Code & Algorithm`: [link]
    *   For **The Turing Jest**:
        *   `+ View Deployment`: https://jest.geekip.dev
    *   For **Rhymes of Israel**:
        *   `+ Install Extension [Chrome Web Store]`: [link]
    *   For the **Portfolio Project**:
        *   `+ View Source Repository (You are here)`: https://geekip.dev

**Contact & Social Links Box:**

The final box is the end of the scroll. It's styled differently, like a Git configuration file (`.gitconfig`).

*   **Header:** `[user]`
*   **Content:**
    *   `github = github.com/gevak`
    *   `linkedin = linkedin.com/in/gevakip`
    *   `facebook = facebook.com/geva.kipper`
    Each line is a clickable link.

**Footer:**

At the absolute bottom of the page, centered and in a smaller, understated font, are two final elements.

1.  An AI credit line styled as a final code comment:
    `// Page architecture and design by a GPT-4 class language model.`

2.  A dynamic stopwatch element, styled like a build timer or server uptime monitor:
    `Time since project genesis: [A live-updating stopwatch showing hours, minutes, and seconds passed since 2025-09-26 01:02:42].`