### **Portfolio Design: The "Code Editor" Concept**

#### **Overall Concept & Layout**

The website is a single, continuous vertical page designed to mimic a modern code editor interface (like VS Code or Sublime Text). The layout is a two-pane view. The main, wider pane on the left (approx. 80-85% of the viewport width) contains all the content, styled to look like code. The narrower pane on the right (approx. 15-20%) is a functional, scrollable 'minimap' that provides a high-level, visual overview of the entire page and serves as the primary navigation tool. The entire design features a daily-changing color scheme and font, reinforcing the "AI-generated" theme.

#### **Header & Thematic Elements**

Upon loading, a brief, full-screen animation plays, simulating code compilation or AI generation: a blinking cursor types out `// Generating today's design...`, followed by rapidly scrolling lines of abstract code, culminating in the page reveal.

The static header at the very top of the content pane is styled like a code file's opening declaration:

```
class GevaKipper {
  constructor() {
    this.role = "Software Engineer at Google, working on core infrastructure for AI products.";
  }
}

// MOTHERSHIP.AI Daily Build: #4A72E4C9
// This portfolio's theme is re-generated daily. What you see today is unique.
```

The name `GevaKipper` is styled like a class name (e.g., bright cyan or yellow). The properties (`role`) are a different color. The subtitle is presented as a prominent, multi-line code comment, with the "Build" hash changing daily.

#### **Navigation: The Minimap**

The right-hand minimap is the core navigation feature. It’s not just a shrunken image of the page but an abstract, stylized representation.

*   **Structure:** It displays a condensed, pixelated version of the "shape" of the content in the main pane. Text blocks are represented by colored regions, and images/visuals are represented by unique patterns.
*   **Functionality:** A semi-transparent, highlighted overlay on the minimap indicates the current viewport. The user can click and drag this overlay to smoothly scroll the main content pane. Clicking on any part of the minimap instantly snaps the main view to that corresponding section.
*   **Visual Cues:** Each of the seven content sections has a distinct color and texture on the minimap, making them visually identifiable. For example:
    *   **GlglStats:** A wavy, sound-wave-like pattern.
    *   **Ahuzat Dibuk:** A grid of tiny, colored squares, like a heatmap.
    *   **2D Part Orienting:** A sharp, angular, polygon shape.
    *   **The Turing Jest:** A pattern of quote marks (`"`) and question marks (`?`).
    *   **Rhymes of Israel:** A pattern resembling two parallel, squiggly lines.
    *   **Portfolio (Meta):** A spiral or recursive pattern.
    *   **Links:** A simple row of three distinct icons.
*   **Hover State:** Hovering over a section in the minimap causes it to brighten and subtly highlights the corresponding title in the main content pane.

#### **Content Sections: Styled as Code**

The six project sections and the final links section are presented as a single JSON-like object or a Python dictionary within the main content pane, following the header.

```
const portfolio_projects = [
  {
    name: "GlglStats",
    description: "/* A Python project measuring song repetitiveness in Israeli pop charts using LZ77 compression, with visualizations of repetition patterns. */",
    site: "https://glglstats.geekip.dev",
    video: "https://www.youtube.com/watch?v=jrKAtOsj1Lo" // Presented at PyData TLV
  },
  {
    name: "Ahuzat Dibuk",
    description: "/* Python scraping & data viz project tracking Tel-Aviv parking occupancy to generate predictive heatmaps for residents. Featured in major news outlets. */",
    news_1: "https://13tv.co.il/item/news/domestic/internal/parking-902956407/",
    news_2: "https://www.mako.co.il/nexter-news/Article-ae43964b891bf71027.htm",
    publication: "https://www.facebook.com/groups/secrettelaviv/posts/10159636301195943/"
  },
  // ... and so on for the other four projects
  {
    name: "This Portfolio",
    description: "/* A self-referential project. You are here. */",
    repository: "https://geekip.dev"
  }
];

const social_links = {
  github: "github.com/gevak",
  linkedin: "linkedin.com/in/gevakip",
  facebook: "facebook.com/geva.kipper"
};
```

*   **Syntax Highlighting:** The code uses a rich, theme-appropriate syntax highlighting. Keys (`name`, `site`) are one color, strings (the URLs) are another, and comments (the descriptions) are italicized and in a less prominent color.
*   **Interactive Links:** All URLs are fully clickable. On hover, they gain a sharp underline, mimicking a "Ctrl+Click" action in an IDE. The video link for 'GlglStats' opens the video in a modal pop-up that is styled to look like a floating terminal window, with a dark background and minimal chrome.
*   **Visuals:** For projects with visual components (GlglStats, Ahuzat Dibuk), a subtle, animated visualization (e.g., a slowly shifting heatmap grid or a pulsing audio wave) can be rendered as a background to that specific code block, visible behind the semi-transparent background color of the main pane.

#### **Footer**

The page concludes with a footer that is styled like the status bar of a code editor. It’s a solid bar running along the bottom of the viewport.

*   **Left Side:** A credit to the AI. `> Design compiled by Assistant. Status: OK.`
*   **Right Side:** A live-updating stopwatch. `> Uptime: [XXX]d [XX]h [XX]m [XX]s`. The timer continuously counts up from the specified datetime: `2025-08-02 01:12:04`.