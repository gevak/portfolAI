### Portfolio Design: The Geva Kipper API

The website is designed as a single-page application that elegantly mimics the interface of modern API documentation, presenting Geva Kipper's work as a series of queryable endpoints. The aesthetic is clean, dark-themed, and interactive, with a focus on typography and subtle animations that reinforce the technical theme.

**Overall Layout and Feel:**
The layout is a two-column design. The left column is a fixed, slim navigation pane listing the "API Endpoints." The right, larger column is the content area, displaying the "API Response" for the selected endpoint. The background is a very dark charcoal grey (#1a1a1a), with text in an off-white. The primary accent color is a vibrant, electric blue (#00BFFF), used for links, active states, and key elements. The entire interface uses a crisp, monospaced font (like Fira Code or JetBrains Mono) to complete the developer-centric feel.

**Header Section (Top of Page):**
At the top of the main content column (the right side), the developer's name is displayed in a large, clean font: `Geva Kipper`. Directly beneath it, in a smaller, lighter font weight, is his role: `Software Engineer at Google, focusing on large-scale data processing and infrastructure.`

Below this, a distinct Subtitle section appears, styled to look like an API status message. It features a small, glowing blue dot on the left, followed by the text: `SYSTEM STATUS: This interface is procedurally regenerated by a design AI every 24 hours. Current build is volatile.` The sentence ends with a solid block cursor `_` that blinks continuously, suggesting an active terminal session.

**Left Navigation Pane ("API Endpoints"):**
This narrow, fixed panel on the left side of the screen serves as the site's primary navigation. It has a slightly lighter grey background to distinguish it from the content area. It is titled `// ENDPOINTS` at the top. Below are the clickable navigation links, styled to look like API routes with HTTP methods.

*   `GET /projects/glglstats`
*   `GET /projects/ahuzat_dibuk`
*   `GET /projects/2d_part_orienting`
*   `GET /source`
*   `GET /contact_info`

When a user hovers over an endpoint, the text glows with the accent blue. When an endpoint is selected, it remains highlighted in blue, and a small, animated loading ellipsis `...` appears next to it for a brief moment before the content loads in the right panel.

**Right Content Pane ("API Response"):**
This is the main area where the content for each "box" is displayed. When a user clicks an endpoint on the left, this panel updates with a smooth fade-in effect. The content is presented in a structured, key-value format reminiscent of a JSON response, using syntax highlighting. The "keys" (e.g., `"project_name"`) are in the accent blue, string "values" are in off-white, and arrays are enclosed in brackets.

1.  **Response for `GET /projects/glglstats`:**
    The content is structured like this:
    ```
    {
      "project_name": "GlglStats",
      "description": "A Python project measuring the repetitiveness of Israeli pop-chart songs using LZ77 compression, including visualizations of repetition patterns.",
      "stack": [ "Python", "LZ77", "Data Visualization" ],
      "assets": {
        "live_site": "https://glglstats.onrender.com/",
        "conference_talk": "https://www.youtube.com/watch?v=jrKAtOsj1Lo" 
      }
    }
    ```
    The `conference_talk` link does not just display the URL, but also embeds the YouTube video player directly below the code block for immediate viewing. The links are fully clickable.

2.  **Response for `GET /projects/ahuzat_dibuk`:**
    ```
    {
      "project_name": "Ahuzat Dibuk",
      "description": "A Python scraping and data visualization project that collects and analyzes occupancy statistics for Tel-Aviv parking lots, generating heat-maps for public use.",
      "press": {
        "13tv_news": "https://13tv.co.il/item/news/...",
        "mako_nexter": "https://www.mako.co.il/nexter-news/...",
        "original_publication": "https://www.facebook.com/groups/secrettelaviv/..."
      }
    }
    ```
    Each link in the `press` object is clickable and opens in a new tab.

3.  **Response for `GET /projects/2d_part_orienting`:**
    ```
    {
      "project_name": "2D Part Orienting",
      "description": "A C++ implementation of an efficient algorithm that constructs a 'push plan' to orient any given polygon, contributed to an open-source computational geometry library.",
      "stack": [ "C++", "Computational Geometry", "Algorithm Design" ],
      "repository": "https://www.cgl.cs.tau.ac.il/projects/2d-part-orienting/"
    }
    ```

4.  **Response for `GET /source`:**
    This is the meta-project.
    ```
    {
      "project_name": "Dynamic API Portfolio",
      "description": "A self-referential portfolio concept designed to appear as an API documentation page. The user interface you are currently interacting with.",
      "is_meta": true,
      "live_instance": "https://portfolio-dor1.onrender.com/"
    }
    ```

5.  **Response for `GET /contact_info`:**
    ```
    {
      "message": "Feel free to connect or browse my work.",
      "channels": {
        "github": "github.com/gevak",
        "linkedin": "linkedin.com/in/gevakip",
        "facebook": "facebook.com/geva.kipper"
      }
    }
    ```
    Each link is active and clickable.

**Footer Section:**
At the very bottom of the page, centered and in a small, subtle font, is the credit and the stopwatch.

The credit line reads: `> Site architecture & design generated by a GPT-4 instance.`

Below this is the live stopwatch. It is styled to look like a session timer from a server log, with a label and the updating time in a monospaced font.
`AI_INSTANCE_UPTIME: [HH:MM:SS]`
This timer actively counts up in real-time from the specified start date of June 9th, 2025, 01:11:32, adding a dynamic and slightly futuristic element to the page.