The website opens with a brief, full-screen loading animation that mimics a code compiler. Text flashes on screen like "Compiling portfolio...", "Resolving dependencies...", "Initializing AI UI v3.4.2...", before fading to reveal the main interface. The entire site is a single-page application designed to look and feel like a modern, minimalist Integrated Development Environment (IDE) in a dark theme. The background is a deep charcoal grey (#1E1E1E), with text and UI elements using a palette of amber, teal, and magenta for syntax highlighting, and a soft off-white for regular text.

The top of the page acts as a status bar and file header. In the upper-left, the developer's name is displayed as a file path: `~/portfolio/Geva_Kipper/`. Immediately below this, two lines of text appear, styled as code comments:
`// Senior Software Engineer at Google, working on core infrastructure and developer tools.`
`// This site's layout is procedurally generated by an AI each day; content and style may evolve.`
In the upper-right corner, there are non-functional window controls (minimize, maximize, close circles in red, yellow, and green) to enhance the desktop application illusion.

The main layout is divided into three vertical columns, reminiscent of an IDE. The leftmost column is a "File Explorer," a narrow panel with a file tree structure. A folder icon labeled `src/` is the root, containing six 'files' representing the projects. Each file has a small, distinct icon (e.g., a Python logo for `.py` files, a C++ logo for `.cpp`, a markdown logo for `.md`). The file names are: `GlglStats.py`, `AhuzatDibuk.py`, `PartOrienting.cpp`, `TheTuringJest.jsx`, `RhymesOfIsrael.ext`, and `Portfolio.md`. Clicking a file populates the central column. The active file is highlighted with a light grey background.

The central, largest column is the "Code Editor." When a project 'file' is selected from the left, this area displays the project's details, formatted and syntax-highlighted to look like a source code file. It uses a monospace font like Fira Code. For example, the project title is written as a class or function declaration (e.g., `class GlglStats:`). The description is formatted as a block comment. The tech stack is listed as `import` statements. The links are presented as string variable assignments (e.g., `const project_url = "https://glglstats.geekip.dev";`). Each link is a clickable element, glowing subtly on hover. For the `GlglStats` project, the YouTube video is embedded directly within a `<div>` styled to look like a code block, as if it were a visual output from the 'code'. For the `Portfolio.md` file, the content is a meta-description of the website itself, styled as a Markdown preview within the editor, with a link to `https://geekip.dev`.

The rightmost column is a narrow "Info & Actions" panel. When a project is selected, this panel displays a concise summary and clear "call to action" buttons. For 'GlglStats', it would have buttons for "Visit Site" and "Watch Talk". For 'Ahuzat Dibuk', it shows three buttons: "Read on 13tv", "Read on Mako", and "View Facebook Post". For 'Rhymes of Israel', a single prominent button says "Install Extension". This panel ensures that even if the user doesn't parse the "code" in the center, the key links are immediately accessible.

The bottom of the page is a fixed "Terminal" panel. This black bar contains two sections. On the left, it displays the social media links styled as command-line prompts. A `$` symbol is followed by clickable text: `open github.com/gevak`, `open linkedin.com/in/gevakip`, and `open facebook.com/geva.kipper`. On the right side of the terminal, two lines of system-like log messages are displayed. The first credits the AI: `[INFO] UI generated by a GPT-4 class assistant.`. The second line is a dynamic stopwatch: `[INFO] Time since last major commit: [a live counter showing hours:minutes:seconds passed since 2025-08-31 01:09:21]`. A steady, blinking cursor appears at the end of the command line on the left, completing the interactive feel of the terminal.