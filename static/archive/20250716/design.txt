### Portfolio Design: The Git Repository of Geva Kipper

**Theme:** A visual, browseable Git repository representing the career and projects of Geva Kipper. The entire page is presented as a single, scrollable commit history on the `main` branch. The aesthetic is clean, dark-themed, and inspired by modern code editors and platforms like GitHub, with a monospaced font for headings and interactive-looking elements.

---

#### **Header & Initial View**

The page opens with a clean, full-width header.

*   **Top Left Corner:** A small Git repository icon followed by the text `gevak / life-and-career` in a muted grey, monospaced font. The "gevak" portion is a slightly brighter white.
*   **Center Stage:** The developer's name, **Geva Kipper**, is displayed in a large, bold, white sans-serif font.
*   **Under the Name:** A single sentence in a smaller, sans-serif font: "A Software Engineer at Google, focusing on large-scale systems and creative applications of AI."
*   **Subtitle:** Directly below, a distinct element that looks like a system notification or a `git status` message. It has a faint, glowing blue border and uses an italic, monospaced font. It reads:
    > `[notice] This repository's design is regenerated by AI daily. Last build: <current_date>.`

A subtle, vertical line starts just below the header and runs down the entire left side of the page, acting as the commit timeline that connects all subsequent sections.

---

#### **The Commit History (Project Sections)**

As the user scrolls down, they move through a series of "commits." Each of the six project sections is designed as a distinct commit log entry. A dot appears on the vertical timeline to the left, aligning with each new "commit" section.

Each commit block has a consistent structure:

1.  **Commit Header:**
    *   A simulated commit hash (e.g., `commit 4e8a1b2...`) in a yellow monospaced font.
    *   `Author: Geva Kipper <contact@geekip.dev>`
    *   `Date: <A plausible past date relevant to the project>`
    *   The commit "message" serves as the section title, formatted in bold white text (e.g., `feat: Measure pop song repetitiveness with GlglStats`).

2.  **Commit Body:**
    *   A concise, one or two-sentence description of the project in a standard sans-serif font.
    *   A row of colored tags/labels (like GitHub labels) indicating the key technologies used (e.g., `Python`, `C++`, `LLM`, `Data Visualization`).

3.  **Files Changed (Links):**
    *   Formatted to look like a `git diff` output.
    *   A summary line: `1 file changed, X insertions(+)` (where X is the number of links).
    *   Then, a green-highlighted block representing the "changes," with each link prefixed by a green `+` symbol and paired with a relevant icon (globe for website, YouTube for video, newspaper for news, etc.).

---

#### **Section-by-Section Design**

**1. GlglStats**
*   **Commit Message:** `feat: Measure pop song repetitiveness with GlglStats`
*   **Description:** An analysis of Israeli pop-chart songs using LZ77 compression to measure and visualize musical repetition patterns.
*   **Files Changed:**
    *   `+ [Live Site] https://glglstats.geekip.dev`
    *   `+ [PyData Talk] https://www.youtube.com/watch?v=jrKAtOsj1Lo`

**2. Ahuzat Dibuk**
*   **Commit Message:** `feat: Generate heatmaps for Tel-Aviv parking occupancy`
*   **Description:** A data scraping project that collects statistics on municipal parking lot occupancy, providing valuable heat-maps for residents.
*   **Files Changed:**
    *   `+ [News: Channel 13] https://13tv.co.il/...`
    *   `+ [News: Mako] https://www.mako.co.il/...`
    *   `+ [Original Post] https://www.facebook.com/...`

**3. 2D Part Orienting**
*   **Commit Message:** `refactor: Implement efficient 2D part orienting algorithm`
*   **Description:** A C++ implementation of a 'push plan' algorithm for orienting a polygon, contributed to an open-source computational geometry library.
*   **Files Changed:**
    *   `+ [Code & Info] https://www.cgl.cs.tau.ac.il/...`

**4. The Turing Jest**
*   **Commit Message:** `feat: Launch LLM arena for generating and rating puns`
*   **Description:** A competitive platform where Large Language Models create and explain puns, with user-driven ratings to crown the wittiest AI.
*   **Files Changed:**
    *   `+ [Live Site] https://jest.geekip.dev`

**5. Rhymes of Israel**
*   **Commit Message:** `feat: Create Chrome extension for rhyming news headlines`
*   **Description:** A browser extension that leverages an LLM to automatically rewrite Israeli news headlines into comedic, highschool-yearbook-style rhymes.
*   **Files Changed:**
    *   `+ [Install Extension] https://chromewebstore.google.com/...`

**6. Portfolio Website (Meta)**
*   **Commit Message:** `docs: Initialize portfolio with self-referential project`
*   **Description:** This very website, designed as an ever-changing browseable Git repository of my life and career.
*   **Files Changed:**
    *   `+ [Source of Truth] https://geekip.dev`

---

#### **Final Section & Footer**

**7. Staged Files (Contact & Socials)**

The final content box breaks the "commit" format slightly. It's styled to look like the "Staged Files" or `README.md` section of a repository.

*   **Title:** `CONNECT.md`
*   **Content:** A simple, clean list of links, each with a prominent social media icon (GitHub, LinkedIn, Facebook).
    *   `github.com/gevak`
    *   `linkedin.com/in/gevakip`
    *   `facebook.com/geva.kipper`

**Footer**

A minimalist footer is fixed to the bottom of the viewport, ensuring it's always visible but unobtrusive. It has a slightly transparent background.

*   **Left Side:** "Design BASHed into existence by an AI model."
*   **Right Side:** A dynamic stopwatch element.
    *   It's prefaced with the text: `Repository Age:`
    *   A live counter continuously displays the time elapsed since `2025-07-16 01:13:17` in `DD:HH:MM:SS` format. The seconds digit visibly ticks, adding a final, dynamic touch to the page.